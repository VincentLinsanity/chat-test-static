{"version":3,"sources":["aes.js","chat/index.js","home/index.js","App.js","store/reducer/index.js","store/reducer/process.js","index.js"],"names":["aes256","require","secret_key","socket","Chat","username","roomname","useState","text","setText","messages","setMessages","useEffect","console","log","io","connect","transports","on","error","emit","data","ans","cipher","startsWith","decrypt","to_Decrypt","temp","push","userId","messagesEndRef","current","scrollIntoView","behavior","sendData","encrypt","to_Encrypt","useRef","className","style","fontSize","map","item","index","ref","placeholder","value","onChange","e","target","onKeyPress","key","onClick","Home","setUserName","setRoomName","to","alert","window","location","reload","Main","useParams","Fragment","App","path","element","rootReducers","combineReducers","ProcessReducer","state","action","type","payload","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.65af20af.chunk.js","sourcesContent":["var aes256 = require(\"aes256\");\n\nvar secret_key = \"uI2ooxtwHeI6q69PS98fx9SWVGbpQohO\";\n\nexport const to_Encrypt = (text) => {\n  var encrypted = aes256.encrypt(secret_key, text);\n  return encrypted;\n};\nexport const to_Decrypt = (cipher, username) => {\n  if (cipher.startsWith(\"Welcome\")) {\n    return cipher;\n  }\n\n  if (cipher.startsWith(username)) {\n    return cipher;\n  }\n\n  var decrypted = aes256.decrypt(secret_key, cipher);\n  return decrypted;\n};\n","import \"./chat.scss\";\nimport { to_Decrypt, to_Encrypt } from \"../aes.js\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport io from \"socket.io-client\";\n\nlet socket = {};\n\nconst Chat = ({ username, roomname }) => {\n  const [text, setText] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n\n  const initConnection = () => {\n    console.log(\"init\");\n    socket = io.connect(\"http://18.224.183.86:8000/chat\", {\n      transports: [\"websocket\"],\n    });\n    socket.on(\"error\", error => {\n      console.log(error);\n    });\n    socket.on(\"connect\", () => {\n      socket.emit(\"joinRoom\", { username, roomname });\n    });\n    socket.on(\"message\", data => {\n      const ans = to_Decrypt(data.text, data.username);\n      let temp = messages;\n      temp.push({\n        userId: data.userId,\n        username: data.username,\n        text: ans,\n      });\n      setMessages([...temp]);\n    });\n  };\n\n  useEffect(initConnection, []);\n\n  const scrollToBottom = () => {\n    messagesEndRef.current.scrollIntoView({ behavior: \"smooth\" });\n  };\n\n  useEffect(scrollToBottom, [messages]);\n\n  const sendData = () => {\n    if (text !== \"\") {\n      const ans = to_Encrypt(text);\n      socket.emit(\"chat\", ans);\n      setText(\"\");\n    }\n  };\n  const messagesEndRef = useRef(null);\n\n  return (\n    <div className=\"chat\">\n      <div className=\"user-name\">\n        <h2>\n          {username} <span style={{ fontSize: \"0.7rem\" }}>in {roomname}</span>\n        </h2>\n      </div>\n      <div className=\"chat-message\">\n        {messages.map((item, index) => {\n          if (item.username !== username) {\n            return (\n              <div className=\"message\" key={index}>\n                <p>{item.text}</p>\n                <span>{item.username}</span>\n              </div>\n            );\n          } else {\n            return (\n              <div className=\"message mess-right\" key={index}>\n                <p>{item.text} </p>\n                <span>{item.username}</span>\n              </div>\n            );\n          }\n        })}\n        <div ref={messagesEndRef} />\n      </div>\n      <div className=\"send\">\n        <input\n          placeholder=\"enter your message\"\n          value={text}\n          onChange={e => setText(e.target.value)}\n          onKeyPress={e => {\n            if (e.key === \"Enter\") {\n              sendData();\n            }\n          }}\n        ></input>\n        <button onClick={sendData}>Send</button>\n      </div>\n    </div>\n  );\n};\nexport default Chat;\n","import React, { useState } from \"react\";\nimport \"./home.scss\";\nimport { Link } from \"react-router-dom\";\n\nconst Home = () => {\n  const [username, setUserName] = useState(\"\");\n  const [roomname, setRoomName] = useState(\"\");\n\n  const sendData = () => {\n    if (username === \"\" || roomname === \"\") {\n      alert(\"username and roomname are must !\");\n      window.location.reload();\n    }\n  };\n\n  return (\n    <div className=\"homepage\">\n      <h1>Welcome to InlineChat</h1>\n      <input\n        placeholder=\"Input your user name\"\n        value={username}\n        onChange={e => setUserName(e.target.value)}\n      ></input>\n      <input\n        placeholder=\"Input the room name\"\n        value={roomname}\n        onChange={e => setRoomName(e.target.value)}\n      ></input>\n      <Link to={`/chat/${roomname}/${username}`}>\n        <button onClick={sendData}>Join</button>\n      </Link>\n    </div>\n  );\n};\n\nexport default Home;\n","import Chat from \"./chat\";\nimport Home from \"./home\";\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route,\n  useParams,\n} from \"react-router-dom\";\nimport \"./App.scss\";\nimport React from \"react\";\n\nconst Main = () => {\n  const { roomname, username } = useParams();\n  return (\n    <React.Fragment>\n      <div>\n        <Chat username={username} roomname={roomname} />\n      </div>\n    </React.Fragment>\n  );\n};\n\nconst App = () => (\n  <Router>\n    <Routes>\n      <Route path=\"/\" element={<Home />} />\n      <Route path=\"/chat/:roomname/:username\" element={<Main />} />\n    </Routes>\n  </Router>\n);\n\nexport default App;\n","import { ProcessReducer } from \"./process\";\nimport { combineReducers } from \"redux\";\nconst rootReducers = combineReducers({\n  ProcessReducer: ProcessReducer,\n});\n\nexport default rootReducers;\n","export const ProcessReducer = (state = {}, action) => {\n  switch (action.type) {\n    case \"PROCESS\":\n      return { ...action.payload };\n\n    default:\n      return state;\n  }\n};\n","import App from \"./App\";\nimport rootReducers from \"./store/reducer/index\";\nimport ReactDOM from \"react-dom\";\nimport { createStore } from \"redux\";\nimport React from \"react\";\nimport { Provider } from \"react-redux\";\n\nconst store = createStore(rootReducers);\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}